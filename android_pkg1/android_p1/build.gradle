/*
 * Copyright (C) 2014 gy.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

/*
 Examples of
   1) dependencies from another project in this gradle stack.
   2,3) open ranged dependencies from a maven repository.

   It's a good idea to use open ranges on to
   save continually updating these references, but it is recommended
   to restrict this to the patch version number (e.g. [0.3,0.4) will
   get the latest 0.3.x version) to avoid unknowingly
   having api breaking changes usually associated with minor and major
   version number changes.
*/
/*
dependencies {
  compile project(':local_android_library_dependency')
  compile 'org.ros.android_core:android_10:[0.3,0.4)'
  compile 'org.ros.android_core:android_15:[0.3,0.4)'
  compile 'com.github.rosjava.android_extras:gingerbread:[0.3,0.4)'
  compile 'org.ros.rosjava_messages:tf2_msgs:[0.5,0.6)'
}
*/
dependencies {
  compile ('org.ros.android_core:android_10:[0.3, 0.4)') {
    exclude group: 'junit'
    exclude group: 'xml-apis'
  }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

task ndkBuild(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkbuild = properties.getProperty('ndk.dir', null) + "/ndk-build"
    commandLine ndkbuild, '-C', file('src/main/jni').absolutePath
}

apply plugin: 'com.android.application'

android {
  compileSdkVersion 28
  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
  }

  sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [];
  }
}